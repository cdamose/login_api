version: '3.8'

services:
  
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Looser1997$
      PGDATA: /data/postgres
      POSTGRES_DB: auth
    
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    
  auth_svc:
    image: auth_svc:latest
    build:
      context: .
      dockerfile: AuthDockerfile
    volumes:
      - ./internal:/app
      - ./db:/app/db
    working_dir: /app
    ports:
      - "8090:8090"
      - "8080:8080"
    environment:
      MYSQL_ADDR: mysql  # Use the service name as the MySQL address
      MYSQL_USER: root
      MYSQL_PASSWORD: Looser1997$$
      MYSQL_DATABASE: auth
      BASE_URL : http://localhost:8090/api/v1/redirect/
      PORT: 8090
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  communication_svc:
    image: autcommunication_svch_svc:latest
    build:
      context: .
      dockerfile: CommunicationSVCDockerfile
    volumes:
      - ./internal:/app
      - ./db:/app/db
    working_dir: /app
    ports:
      - "8081:8081"
    environment:
      MYSQL_ADDR: mysql  # Use the service name as the MySQL address
      MYSQL_USER: root
      MYSQL_PASSWORD: Looser1997$$
      MYSQL_DATABASE: auth
      BASE_URL : http://localhost:8090/api/v1/redirect/
      PORT: 8081
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
   
  

